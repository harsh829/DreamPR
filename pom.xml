<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.inn.sparkrunner</groupId>
	<artifactId>spark-runner</artifactId>
	<version>1.0</version>


	<properties>
		<hadoop.version>3.1.1.3.0.1.0-187</hadoop.version>
		<hbase.version>2.0.0.3.0.1.0-187</hbase.version>
		<phoenix.version>5.0.0.3.0.1.0-187</phoenix.version>
		<scala.version>2.11</scala.version>
		<spark.version>2.3.1.3.0.1.0-187</spark.version>
		<kafka.version>1.1.1.3.0.1.0-187</kafka.version>
		<mongo.version>2.12.2</mongo.version>
		<commons.version>2.6.0</commons.version>
	</properties>

	<repositories>
		<!-- Maven central repository -->
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo.maven.apache.org/maven2</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- Innoeye repository -->
		<repository>
			<id>spark_runner-repo</id>
			<url>file:///${project.basedir}/../spark-runner-repo</url>
		</repository>

		<!-- Hortonworks repositories -->
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>hortonworks.release</id>
			<name>Hortonworks HDP</name>
			<url>http://repo.hortonworks.com/content/repositories/releases</url>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>hortonworks.public</id>
			<name>Hortonworks Public Dependencies</name>
			<url>http://repo.hortonworks.com/content/groups/public</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-scala_2.11</artifactId>
			<version>2.8.8</version>
		</dependency>
		<!-- ExcelRead -->
		<dependency>
			<groupId>com.crealytics</groupId>
			<artifactId>spark-excel_2.11</artifactId>
			<version>0.9.17</version>
		</dependency>
		<!-- Reflection -->
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.10</version>
		</dependency>

		<!-- Geo VTD parser Dependancy -->
		<dependency>
			<groupId>com.ximpleware</groupId>
			<artifactId>vtd-xml</artifactId>
			<version>2.11</version>
		</dependency>

		<!-- JDBC drivers -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc7</artifactId>
			<version>12.1.0.1</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.43</version>
			<scope>runtime</scope>
		</dependency>

		<!-- TesnsorFlow Dependency -->
		<dependency>
			<groupId>org.tensorflow</groupId>
			<artifactId>tensorflow</artifactId>
			<version>1.4.0</version>
		</dependency>
		<!-- for tensor frame -->
		<dependency>
			<groupId>databricks</groupId>
			<artifactId>tensorframes</artifactId>
			<version>0.2.9-s_2.11</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.databricks/spark-xml -->
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-xml_2.11</artifactId>
			<version>0.4.1</version>
		</dependency>

		<!-- Spark dependency -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>



		<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-streaming-kafka-0-10 -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
			<version>2.3.1.3.0.0.0-1634</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-sql-kafka-0-10 -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql-kafka-0-10_2.11</artifactId>
			<version>2.3.1.3.0.0.0-1634</version>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-flume_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-hive_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-repl_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-yarn_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-actors</artifactId>
			<version>2.10.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.databricks/spark-avro_2.10 -->
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-avro_2.11</artifactId>
			<version>4.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- HBase dependency -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-server</artifactId>
			<version>${hbase.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Mongo dependency -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.version}</version>
		</dependency>

		<!-- Zookeeper kafka dependencies -->
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>0.7</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>1.1.1.3.2.0.0-520</version>

			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.11</artifactId>
			<version>1.1.1.3.2.0.1-2</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.16</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.16</version>
		</dependency>

		<!-- <dependency> <groupId>net.objecthunter</groupId> <artifactId>exp4j</artifactId> 
			<version>0.4.0.ALPHA-2</version> </dependency> -->

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20090211</version>
		</dependency>
		<!-- <dependency> <groupId>de.micromata.jak</groupId> <artifactId>JavaAPIforKml</artifactId> 
			<version>2.2.0</version> </dependency> -->
		<!-- <dependency> <groupId>org.zeroturnaround</groupId> <artifactId>zt-zip</artifactId> 
			<version>1.9</version> <type>jar</type> </dependency> -->
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>fastutil</artifactId>
			<version>7.0.2</version>
		</dependency>
		<!-- <dependency> <groupId>org.apache.ant</groupId> <artifactId>ant</artifactId> 
			<version>1.9.4</version> </dependency> -->
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>1.8.2</version>
		</dependency>
		<dependency>
			<groupId>de.micromata.jak</groupId>
			<artifactId>JavaAPIforKml</artifactId>
			<version>2.2.0</version>
		</dependency>
		<!--<dependency>
			<groupId>org.jpmml</groupId>
			<artifactId>jpmml-sparkml</artifactId>
			<version>1.1.0</version>
		</dependency>-->
		<!-- <dependency> <groupId>org.python</groupId> <artifactId>jython</artifactId> 
			<version>2.5.0</version> </dependency> -->
		<!-- <dependency> <groupId>com.maxmind.geoip</groupId> <artifactId>geoip-api</artifactId> 
			<version>1.2.10</version> </dependency> -->
		<!--<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
			<version>1.2.2</version>
		</dependency>-->
		<!-- <dependency> <groupId>com.thoughtworks.xstream</groupId> <artifactId>xstream</artifactId> 
			<version>1.4.5</version> </dependency> -->
		<!-- <dependency> <groupId>org.apache.commons</groupId> <artifactId>commons-csv</artifactId> 
			<version>1.1</version> </dependency> -->
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-csv_2.11</artifactId>
			<version>1.5.0</version>
		</dependency>

		<!-- Commons library -->
		<dependency>
			<groupId>com.inn.commons</groupId>
			<artifactId>commons-jcp</artifactId>
			<version>0.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.inn.commons</groupId>
			<artifactId>commons-core</artifactId>
			<version>${commons.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				
				<exclusion>
					<groupId>com.northconcepts</groupId>
					<artifactId>datapipeline</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.inn.commons</groupId>
			<artifactId>commons-hadoop</artifactId>
			<version>${commons.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hbase</groupId>
					<artifactId>hbase-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.northconcepts</groupId>
					<artifactId>datapipeline</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.inn.commons</groupId>
			<artifactId>commons-spatial</artifactId>
			<version>0.6.12</version>
		</dependency>
		<dependency>
			<groupId>com.inn.commons</groupId>
			<artifactId>commons-shapefile</artifactId>
			<version>0.4.5</version>
		</dependency>


		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>

		<!-- Spark HBase Connector Custom jar -->
		<dependency>
			<groupId>com.hortonworks</groupId>
			<artifactId>shc-core</artifactId>
			<version>1.1.2.1-2.2-s_2.11</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.hbase/hbase-mapreduce -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-mapreduce</artifactId>
			<version>2.0.0.3.0.0.0-1634</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-hdfs</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>com.inn.commons</groupId>
			<artifactId>lucen-common</artifactId>
			<version>2.5.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-hdfs</artifactId>
				</exclusion>
			</exclusions>
		</dependency>



		<!-- https://mvnrepository.com/artifact/org.apache.ant/ant -->
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.10.5</version>
		</dependency>



		<dependency>
			<groupId>org.datasyslab</groupId>
			<artifactId>geospark</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.datasyslab</groupId>
			<artifactId>geospark-sql_2.3</artifactId>
			<version>1.1.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>
		<dependency>
			<groupId>com.monitorjbl</groupId>
			<artifactId>xlsx-streamer</artifactId>
			<version>1.2.0</version>
		</dependency>

		<!-- Jauns Graph Dependency -->
		<dependency>
			<groupId>org.janusgraph</groupId>
			<artifactId>janusgraph-core</artifactId>
			<version>0.3.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.codahale.metrics</groupId>
					<artifactId>metrics-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.janusgraph</groupId>
			<artifactId>janusgraph-hbase</artifactId>
			<version>0.3.1</version>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.janusgraph</groupId>
					<artifactId>janusgraph-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-core</artifactId>
			<version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.janusgraph</groupId>
			<artifactId>janusgraph-lucene</artifactId>
			<version>0.3.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.janusgraph</groupId>
					<artifactId>janusgraph-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-driver</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>ai.h2o</groupId>
			<artifactId>sparkling-water-assembly_2.11</artifactId>
			<version>2.2.10</version>
		</dependency>

		<!--Soulwing -->
		<dependency>
			<groupId>org.soulwing.snmp</groupId>
			<artifactId>tnm4j</artifactId>
			<version>1.1.0-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.23.1</version>
		</dependency>

	</dependencies>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.inn.sparkrunner.execute.WorkflowExecuteFromXMLFile</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
					<finalName>spark-runner-1.0</finalName>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
